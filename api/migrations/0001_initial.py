# Generated by Django 3.2.6 on 2023-07-26 14:37

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='a2bRelation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date_AH', models.CharField(blank=True, max_length=100)),
                ('end_date_AH', models.CharField(blank=True, max_length=100)),
                ('authority', models.CharField(blank=True, max_length=100)),
                ('confidence', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='authorMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('author_uri', models.CharField(max_length=50)),
                ('author_ar', models.CharField(blank=True, max_length=255)),
                ('author_lat', models.CharField(blank=True, max_length=255)),
                ('author_ar_prefered', models.CharField(blank=True, max_length=255)),
                ('author_lat_prefered', models.CharField(blank=True, max_length=255)),
                ('date', models.IntegerField(blank=True, null=True)),
                ('date_AH', models.IntegerField(blank=True, null=True)),
                ('date_CE', models.IntegerField(blank=True, null=True)),
                ('date_str', models.CharField(blank=True, max_length=255)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('related_persons', models.ManyToManyField(related_name='persons_related', related_query_name='person_related', through='api.a2bRelation', to='api.authorMeta')),
            ],
        ),
        migrations.CreateModel(
            name='editionMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('editor', models.CharField(blank=True, max_length=100)),
                ('edition_place', models.CharField(blank=True, max_length=100)),
                ('publisher', models.CharField(blank=True, max_length=100)),
                ('edition_date', models.CharField(blank=True, max_length=100)),
                ('ed_info', models.CharField(blank=True, max_length=255)),
                ('pdf_url', models.CharField(blank=True, max_length=255)),
                ('worldcat_url', models.CharField(blank=True, max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='placeMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('thuraya_uri', models.CharField(blank=True, max_length=100)),
                ('name_ar', models.CharField(blank=True, max_length=100)),
                ('name_lat', models.CharField(blank=True, max_length=100)),
                ('coordinates_str', models.CharField(blank=True, max_length=50)),
                ('related_places', models.ManyToManyField(related_name='places_related', related_query_name='place_related', through='api.a2bRelation', to='api.placeMeta')),
            ],
        ),
        migrations.CreateModel(
            name='relationType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(blank=True, max_length=10)),
                ('subtype_code', models.CharField(blank=True, max_length=10)),
                ('name', models.CharField(blank=True, max_length=50)),
                ('name_inverted', models.CharField(blank=True, max_length=50)),
                ('descr', models.CharField(blank=True, max_length=255)),
                ('entities', models.CharField(blank=True, max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('release_code', models.CharField(max_length=10)),
                ('release_date', models.DateField(blank=True, null=True)),
                ('zenodo_link', models.CharField(blank=True, max_length=200)),
                ('release_notes', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='SourceCollectionDetails',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=10, unique=True)),
                ('url', models.CharField(blank=True, max_length=200)),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='textMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_uri', models.CharField(max_length=100, unique=True)),
                ('titles_ar', models.CharField(blank=True, max_length=255)),
                ('titles_lat', models.CharField(blank=True, max_length=255)),
                ('title_ar_prefered', models.CharField(blank=True, max_length=255)),
                ('title_lat_prefered', models.CharField(blank=True, max_length=255)),
                ('text_type', models.CharField(blank=True, max_length=15)),
                ('tags', models.CharField(blank=True, max_length=255)),
                ('notes', models.TextField(blank=True)),
                ('author_meta', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='texts', related_query_name='text', to='api.authormeta')),
                ('related_persons', models.ManyToManyField(related_name='related_texts', related_query_name='related_text', through='api.a2bRelation', to='api.authorMeta')),
                ('related_places', models.ManyToManyField(related_name='related_texts', related_query_name='related_text', through='api.a2bRelation', to='api.placeMeta')),
                ('related_texts', models.ManyToManyField(related_name='texts_related', related_query_name='text_related', through='api.a2bRelation', to='api.textMeta')),
            ],
        ),
        migrations.CreateModel(
            name='versionMeta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version_id', models.CharField(max_length=50, unique=True)),
                ('version_uri', models.CharField(blank=True, max_length=100)),
                ('language', models.CharField(blank=True, max_length=9)),
                ('tags', models.CharField(blank=True, max_length=100)),
                ('edition_meta', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='editions', related_query_name='edition', to='api.editionmeta')),
                ('text_meta', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='versions', related_query_name='version', to='api.textmeta')),
            ],
        ),
        migrations.CreateModel(
            name='TextReuseStats',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('instances_count', models.IntegerField(blank=True, null=True)),
                ('book1_word_match', models.IntegerField(blank=True, null=True)),
                ('book2_word_match', models.IntegerField(blank=True, null=True)),
                ('book1_match_book2_per', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('book2_match_book1_per', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('book_1', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='textreuse_b1', related_query_name='textreuse_b1', to='api.versionmeta', to_field='version_id')),
                ('book_2', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='textreuse_b2', related_query_name='textreuse_b2', to='api.versionmeta', to_field='version_id')),
            ],
        ),
        migrations.CreateModel(
            name='ReleaseMeta',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('char_length', models.IntegerField(blank=True, null=True)),
                ('tok_length', models.IntegerField(blank=True, null=True)),
                ('url', models.CharField(blank=True, max_length=255)),
                ('analysis_priority', models.CharField(blank=True, max_length=3)),
                ('annotation_status', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='api.releasedetails')),
                ('version_meta', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='releases', related_query_name='release', to='api.versionmeta')),
            ],
        ),
        migrations.CreateModel(
            name='personName',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=3)),
                ('shuhra', models.CharField(blank=True, max_length=255)),
                ('nasab', models.CharField(blank=True, max_length=255)),
                ('kunya', models.CharField(blank=True, max_length=255)),
                ('ism', models.CharField(blank=True, max_length=255)),
                ('laqab', models.CharField(blank=True, max_length=255)),
                ('nisba', models.CharField(blank=True, max_length=255)),
                ('author_meta', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='name_elements', related_query_name='name_element', to='api.authormeta')),
            ],
        ),
        migrations.AddField(
            model_name='editionmeta',
            name='text_meta',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='editions', related_query_name='edition', to='api.textmeta'),
        ),
        migrations.CreateModel(
            name='CorpusInsights',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('number_of_unique_authors', models.IntegerField(blank=True, null=True)),
                ('number_of_books', models.IntegerField(blank=True, null=True)),
                ('number_of_versions', models.IntegerField(blank=True, null=True)),
                ('total_word_count', models.IntegerField(blank=True, null=True)),
                ('largest_book', models.IntegerField(blank=True, null=True)),
                ('total_word_count_pri', models.IntegerField(blank=True, null=True)),
                ('top_10_book_by_word_count', models.JSONField(blank=True, null=True)),
                ('release', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='corpus_statistics', related_query_name='corpus_statistic', to='api.releasedetails')),
            ],
        ),
        migrations.AddField(
            model_name='authormeta',
            name='related_places',
            field=models.ManyToManyField(related_name='related_persons', related_query_name='related_person', through='api.a2bRelation', to='api.placeMeta'),
        ),
        migrations.AddField(
            model_name='a2brelation',
            name='person_a',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_persons_a', related_query_name='related_person_a', to='api.authormeta'),
        ),
        migrations.AddField(
            model_name='a2brelation',
            name='person_b',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_persons_b', related_query_name='related_person_b', to='api.authormeta'),
        ),
        migrations.AddField(
            model_name='a2brelation',
            name='place_a',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_places_a', related_query_name='related_place_a', to='api.placemeta'),
        ),
        migrations.AddField(
            model_name='a2brelation',
            name='place_b',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_places_b', related_query_name='related_place_b', to='api.placemeta'),
        ),
        migrations.AddField(
            model_name='a2brelation',
            name='relation_type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='api.relationtype'),
        ),
        migrations.AddField(
            model_name='a2brelation',
            name='text_a',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_texts_a', related_query_name='related_text_a', to='api.textmeta'),
        ),
        migrations.AddField(
            model_name='a2brelation',
            name='text_b',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_texts_b', related_query_name='related_text_b', to='api.textmeta'),
        ),
    ]
